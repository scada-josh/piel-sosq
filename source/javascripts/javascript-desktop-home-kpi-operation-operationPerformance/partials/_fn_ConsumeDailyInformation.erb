ConsumeDailyInformation: function () {
	// console.log("ConsumeDailyInformation");

          var myStartDate = moment(fn.paramStartDate);
          var myEndDate = moment(fn.paramEndDate); 
          var myDuration = moment.duration(myEndDate.diff(myStartDate));
          var myDays = myDuration.asDays();
          console.log(myDays)


          if (myDays > 50) {

              toastr.options = {
                "closeButton": true,
                "debug": false,
                "positionClass": "toast-top-full-width",
                "onclick": null,
                "showDuration": "1000",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
              }

              var tmpMsg = "ช่วงวันที่คุณเลือกเกิน 50 วัน ระบบไม่สามารถแสดงผลได้";
              toastr["warning"](tmpMsg, "<h3>Warning</h3>");

              return false;
          } 




          if ($.fn.DataTable.isDataTable('#datatableOperationKPI') ) {
              $('#datatableOperationKPI').empty();
              $('#datatableOperationKPI').dataTable().fnDestroy();
              $('#datatableOperationKPI > thead > tr').remove();
              $('#datatableOperationKPI > tfoot > tr').remove();
              // $('#datatableOperationKPI').deleteTFoot();
          }


	        if (fn.paramStartDate) {
	          // paramStartDate = fn.paramStartDate.format('DD/MM/YYYY');
	          paramStartDate = fn.paramStartDate.format('YYYY-MM-DD');
	        }

	        if (fn.paramEndDate) {
	          // paramEndDate = fn.paramEndDate.format('DD/MM/YYYY');
	          paramEndDate = fn.paramEndDate.format('YYYY-MM-DD');
	        }
	        

	        var tmpData = {
	        	"startDate" : paramStartDate, 
	        	"endDate" : paramEndDate, 
	        	"siteName" : fn.paramSiteID
	        }

          if (!fn.paramSiteName) {

            // toastr.options = {
            //   "closeButton": true,
            //   "debug": false,
            //   "newestOnTop": true,
            //   "progressBar": true,
            //   "positionClass": "toast-top-center",
            //   "preventDuplicates": false,
            //   "showDuration": "300",
            //   "hideDuration": "1000",
            //   "timeOut": "5000",
            //   "extendedTimeOut": "1000",
            //   "showEasing": "swing",
            //   "hideEasing": "linear",
            //   "showMethod": "fadeIn",
            //   "hideMethod": "fadeOut"
            // }

            toastr.options = {
                "closeButton": true,
                "debug": false,
                "positionClass": "toast-top-full-width",
                "onclick": null,
                "showDuration": "1000",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
              }

            var tmpMsg = "กรุณาเลือกศูนย์";
            toastr["warning"](tmpMsg, "<h3>Warning</h3>");

            return false;
          } 



          

          $.ajax({
            "url": "../../../../../api/restful-api/kpiManager/getOperationKpiSummary/", 
            "type": "POST",
            "dataType": "json",
            "contentType": "application/json",
            "data": JSON.stringify(tmpData),
            "success": function(result){
                // console.log(result);

                arrAverageBox_EPOD = [];
                arrAverageDrop_EPOD = [];
                arrAverageBox_NonEPOD = [];
                arrAverageDrop_NonEPOD = [];

                $("#epod-average-box-id").html(numeral(result.epod_average_box).format('0,0.00'));
                $("#epod-average-drop-id").html(numeral(result.epod_average_drop).format('0,0.00'));
                $("#non-epod-average-box-id").html(numeral(result.non_epod_average_box).format('0,0.00'));
                $("#non-epod-average-drop-id").html(numeral(result.non_epod_average_drop).format('0,0.00'));

                var resultDataTableHeaderTemplate = Handlebars.compile($("#dataTable-header-Template").html());
                
                var resultStartDate = moment(result.startDate, "DD/MM/YYYY").format('YYYY-MM-DD');
                var resultEndDate = moment(result.endDate, "DD/MM/YYYY").format('YYYY-MM-DD');

                    // console.log(resultStartDate);
                    // console.log(resultEndDate);

                var arrDates = fn.GetArrDates(new Date(resultStartDate), new Date(resultEndDate));
                    // console.log("arrDates");
                    // console.log(arrDates);
                var context = fn.DatatableOperationKPI_ConvertToContext(arrDates);


                var returnedData_delivery_type_epod = $.grep(result.rows[0].details, function (element, index) {
                  return element.delivery_type == 'EPOD';
                });
                // console.log(returnedData_delivery_type_epod);

                var returnedData_delivery_type_non_epod = $.grep(result.rows, function (element, index) {
                  return element.delivery_type == 'Non-EPOD';
                });


               $.each(arrDates, function(_i, _val) {
                    // console.log(moment(_val, "DD/MM/YYYY").format('YYYY-MM-DD'));
                    var tmpDate = moment(_val, "DD/MM/YYYY").format('YYYY-MM-DD');

                    /***** EPOD Average *****/
                    var avgBoxEPOD = 0;
                    var avgDropEPOD = 0;
                    var countBoxEPOD = 0;
                    var countDropEPOD = 0;

                    $.each( returnedData_delivery_type_epod, function( i, val ) {
                         var details = val.details;
                         // console.log(details);

                         $.each( details, function( _i_details, _val_details ) {
                            // console.log(_val_details.job_date);
                            if (_val_details.job_date == tmpDate) {
                                countBoxEPOD = countBoxEPOD + _val_details.box_success;
                                countDropEPOD = countDropEPOD + _val_details.drop_success;
                                return true;
                            }
                         });

                    });

                    avgBoxEPOD = countBoxEPOD/returnedData_delivery_type_epod.length;
                    avgDropEPOD = countDropEPOD/returnedData_delivery_type_epod.length;
                    // avgBoxEPOD = countBoxEPOD;
                    // avgDropEPOD = countDropEPOD;
                    arrAverageBox_EPOD.push(avgBoxEPOD);
                    arrAverageDrop_EPOD.push(avgDropEPOD);


                    /***** Non-EPOD Average *****/
                    var avgBoxNonEPOD = 0;
                    var avgDropNonEPOD = 0;
                    var countBoxNonEPOD = 0;
                    var countDropNonEPOD = 0;

                    $.each( returnedData_delivery_type_non_epod, function( i, val ) {
                         var details = val.details;

                         $.each( details, function( _i_details, _val_details ) {
                            // console.log(_val_details.job_date);
                            if (_val_details.job_date == tmpDate) {
                                countBoxNonEPOD = countBoxNonEPOD + _val_details.box_success;
                                countDropNonEPOD = countDropNonEPOD + _val_details.drop_success;
                                return true;
                            }
                         });
                    });

                    avgBoxNonEPOD = countBoxNonEPOD/returnedData_delivery_type_non_epod.length;
                    avgDropNonEPOD = countDropNonEPOD/returnedData_delivery_type_non_epod.length;
                    // avgBoxNonEPOD = countBoxNonEPOD;
                    // avgDropNonEPOD = countDropNonEPOD;
                    arrAverageBox_NonEPOD.push(avgBoxNonEPOD);
                    arrAverageDrop_NonEPOD.push(avgDropNonEPOD);

               });

                $('#datatableOperationKPI').html(resultDataTableHeaderTemplate(context)).promise().done(function(){
                  fn.DatatableOperationKPI();
                  fn.DatatableOperationKPI_Click_Handler();
                });

            },
            "error": function(jqXHR, textStatus, errorThrown){
              console.log('textStatus: ' + textStatus);
            }
          });

  
    return false;

  
},